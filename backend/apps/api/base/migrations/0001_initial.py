# Generated by Django 3.2.10 on 2022-10-21 20:46

import apps.core.utils.model_mixin
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
            bases=(models.Model, apps.core.utils.model_mixin.IsPublishedMixin, apps.core.utils.model_mixin.DatePublishedMixin, apps.core.utils.model_mixin.DateTimeCreatedMixin),
        ),
        migrations.CreateModel(
            name='Exhibitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('about', models.TextField(blank=True, null=True, verbose_name='О компании')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Логотип')),
                ('main_picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Логотип')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Адрес')),
                ('legal_address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Юридический адрес')),
                ('producer_address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Адрес производства')),
                ('phone', models.CharField(blank=True, max_length=25, null=True, verbose_name='Телефон')),
                ('name_contact_person', models.CharField(blank=True, max_length=250, null=True, verbose_name='ФМО контактного лица')),
                ('inn', models.CharField(blank=True, max_length=25, null=True, verbose_name='ИНН')),
                ('display_price', models.IntegerField(blank=True, choices=[(0, 'Нет'), (1, 'Да'), (2, 'Отображать текст')], null=True, verbose_name='Тип')),
                ('display_price_text', models.CharField(blank=True, max_length=50, null=True, verbose_name='Цена (произвольный текст)')),
                ('import_substitution', models.IntegerField(blank=True, choices=[(0, 'Нет'), (1, 'Да')], null=True, verbose_name='Импортозамещение')),
            ],
            options={
                'verbose_name': 'Экспонент',
                'verbose_name_plural': 'Экспоненты',
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Цена')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('analogues', models.TextField(blank=True, null=True, verbose_name='Аналоги')),
                ('type_product', models.IntegerField(blank=True, choices=[(0, 'Товар'), (1, 'Услуга')], null=True, verbose_name='Тип')),
                ('import_substitution', models.IntegerField(blank=True, choices=[(0, 'Нет'), (1, 'Да')], null=True, verbose_name='Импортозамещение')),
                ('type_purchase', models.IntegerField(blank=True, choices=[(0, 'Опт'), (1, 'Розница'), (2, 'Оба варианта')], null=True, verbose_name='Возможность приобретения')),
                ('delivery_method', models.IntegerField(choices=[(0, 'HTML'), (1, 'Видео')], verbose_name='Способ доставки')),
                ('payment_method', models.IntegerField(choices=[(0, 'HTML'), (1, 'Видео')], verbose_name='Способ оплаты')),
                ('minimum_batch', models.IntegerField(blank=True, default=1, null=True, verbose_name='Минимальная партия')),
                ('video', models.URLField(blank=True, null=True, verbose_name='Видео контент')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.brand', verbose_name='Бренд')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.category', verbose_name='Категория')),
                ('exhibitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.exhibitor', verbose_name='Экспонент')),
                ('producer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.producer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
            bases=(models.Model, apps.core.utils.model_mixin.IsPublishedMixin, apps.core.utils.model_mixin.DatePublishedMixin),
        ),
        migrations.CreateModel(
            name='TypeCooperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип сотрудничества',
                'verbose_name_plural': 'Типы сотрудничества',
            },
        ),
        migrations.CreateModel(
            name='ProductPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Изображение')),
                ('keywords', models.CharField(max_length=150, verbose_name='Ключевые слова')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Изображения товара',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Логотип')),
                ('name', models.CharField(max_length=250, verbose_name='Наименование')),
                ('exhibitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.exhibitor', verbose_name='Экспонент')),
            ],
            options={
                'verbose_name': 'Партнер',
                'verbose_name_plural': 'Партнеры',
            },
            bases=(models.Model, apps.core.utils.model_mixin.IsPublishedMixin, apps.core.utils.model_mixin.OrderNumberMixin),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
                ('site_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на сайт партнера/заказчика')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Адрес')),
                ('exhibitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.exhibitor', verbose_name='Экспонент')),
                ('type_cooperation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.typecooperation', verbose_name='Тип сотрудничества')),
            ],
            options={
                'verbose_name': 'Локация',
                'verbose_name_plural': 'Локации',
            },
            bases=(models.Model, apps.core.utils.model_mixin.DisplayMixin),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Изображение')),
                ('name', models.CharField(max_length=150, verbose_name='ФИО')),
                ('company', models.CharField(blank=True, max_length=150, null=True, verbose_name='Компания')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('exhibitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.exhibitor', verbose_name='Экспонент')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
            bases=(models.Model, apps.core.utils.model_mixin.IsPublishedMixin, apps.core.utils.model_mixin.DatePublishedMixin, apps.core.utils.model_mixin.DateTimeCreatedMixin),
        ),
        migrations.AddField(
            model_name='category',
            name='exhibitor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.exhibitor', verbose_name='Экспонент'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.category', verbose_name='Родительская категория'),
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('site_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на сайт партнера/заказчика')),
                ('type_content', models.IntegerField(choices=[(0, 'HTML'), (1, 'Видео')], verbose_name='Дата создания')),
                ('html_content', models.TextField(blank=True, null=True, verbose_name='HTML контент')),
                ('video_content', models.URLField(blank=True, null=True, verbose_name='Видео контент')),
                ('import_substitution', models.IntegerField(choices=[(0, 'Нет'), (1, 'Да')], default=0, verbose_name='Шильд импортозамещения')),
                ('exhibitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.exhibitor', verbose_name='Экспонент')),
            ],
            options={
                'verbose_name': 'Кейс',
                'verbose_name_plural': 'Кейсы',
            },
            bases=(models.Model, apps.core.utils.model_mixin.IsPublishedMixin, apps.core.utils.model_mixin.DatePublishedMixin),
        ),
    ]
