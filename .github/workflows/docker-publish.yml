name: Docker

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Read Docker Image Identifiers
        id: read-docker-image-identifiers
        run: |
          BASE_IMAGE_NAME="$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"
          echo "BACKEND_IMAGE=${{ env.REGISTRY }}/${BASE_IMAGE_NAME}:backend" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=${{ env.REGISTRY }}/${BASE_IMAGE_NAME}:frontend" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker frontend image
        id: build-and-push-frontend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./config/Dockerfile.frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}
          cache-from: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache,mode=max

      - name: Build and push Docker backend image
        id: build-and-push-backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./config/Dockerfile.backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}
          cache-from: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache,mode=max
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Trigger portainer webhook
        run: |
          curl -k --request POST ${{ secrets.PORTAINER_WEBHOOK }}
